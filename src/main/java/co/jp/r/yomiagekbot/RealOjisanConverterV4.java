
package co.jp.r.yomiagekbot;

import org.springframework.stereotype.Component;

import java.time.LocalDateTime;
import java.util.*;

@Component
public class RealOjisanConverterV4 {

    public enum Category {
        GREETING, SMALL_TALK, ENCOURAGEMENT, APOLOGY
    }

    private static final Map<Category, List<String>> CATEGORY_KEYWORDS = Map.of(
        Category.GREETING, List.of("сЂісЂ»сѓѕсЂє", "сЂЊсѓЊсЂФсЂАсЂ»", "сЂЊсѓЊсЂ░сѓЊсЂ»", "сѓёсЂБсЂ╗", "тЁЃТ░Ќ", "Уф┐тГљ"),
        Category.SMALL_TALK, List.of("ТџЉсЂё", "т»њсЂё", "тцЕТ░Ќ", "Тў╝сЂћсЂ»сѓЊ", "ТюђУ┐Љ", "сЂЕсЂє", "Тўаућ╗", "С╗ЋС║І"),
        Category.ENCOURAGEMENT, List.of("сЂїсѓЊсЂ░сЂБсЂд", "т┐юТЈ┤", "тцДСИѕтцФ", "уёАуљє", "С╝ЉсѓЊсЂД", "сЂцсѓЅсЂё", "т┐ЃжЁЇ", "уќ▓сѓї"),
        Category.APOLOGY, List.of("сЂћсѓЂсѓЊ", "сЂЎсЂЙсЂфсЂё", "Уе▒сЂЌсЂд", "УгЮсѓІ", "тц▒уц╝", "тЈЇуюЂ")
    );

    private static final Map<Category, String[]> ENDINGS = Map.of(
        Category.GREETING, new String[]{
            "сЂасѓѕсЂГсђю", "сЂасѓѕсђюсѓЊ", "сѓѕсѓЇсЂЌсЂЈсЂГсђюсђю", "С╗іТЌЦсѓѓсЂїсѓЊсЂ░сѓЇсђюсЂГсђю", "С╗іТЌЦсѓѓсЃЋсѓАсѓцсЃѕсђюсђю­Ъњф", "тЁЃТ░ЌсЂФсЂёсЂЊсђюсђюсђюсђюсђюРюе"
        },
        Category.SMALL_TALK, new String[]{
            "сЂасѓѕсЂГсЂЄсђюсђюсђю", "сЂфсѓЊсЂасѓѕсЂГсђюсђю", "сѓЈсЂІсѓІсЂЁсђюсђюсђю", "сЂБсЂдТёЪсЂўсђюсђюсђюсђю", "сЂ╗сѓЊсЂесЂ╗сѓЊсЂесђюсђю", "сЂЮсѓїсЂфсђюсђюсђюсђюсђю"
        },
        Category.ENCOURAGEMENT, new String[]{
            "уёАуљєсЂЌсЂфсЂёсЂДсЂГсђюсђю", "сЂісЂўсЂЋсѓЊт┐юТЈ┤сЂЌсЂдсѓІсѓѕсЂЅсЂЅсђюсђюсђю­ЪЊБ", "тЁЃТ░ЌтЄ║сЂЌсЂдсЂГсђюсђю", "сЂЇсЂБсЂетцДСИѕтцФсЂасѓѕсЂЅсђюсђюсђюсђю", "С╝ЉсѓЊсЂДсЂёсЂёсѓЊсЂасѓѕсђюсђюсђюсђю"
        },
        Category.APOLOGY, new String[]{
            "сЂ╗сѓЊсЂесЂћсѓЂсѓЊсЂГсђюсђюсђюсђю", "Уе▒сЂЌсЂдсЂГРђд­ЪЦ║", "Т░ЌсѓњсЂцсЂЉсѓІсЂІсѓЅсЂГсђюсђюсђю", "сЂЌсѓЄсѓЊсЂ╝сѓіРђдтЈЇуюЂсЂЌсЂдсѓІсѓѕсЂЅсЂЅсђюсђюсђюсђю"
        }
    );

    private static final Map<Category, String[]> INTERJECTIONS = Map.of(
        Category.GREETING, new String[]{"сѓёсЂБсЂ╗сђюсђю", "сЂісЂ»сѓѕсЂЅсЂЅсђюсђюРўђ", "сЂЊсѓЊсЂАсѓЃсђюсђюсђю", "сЂћсЂЇсЂњсѓЊсѓѕсЂєсђюсђюсђюсђю"},
        Category.SMALL_TALK, new String[]{"сЂєсѓЊсЂєсѓЊсђюсђю", "сЂИсЂЄсђюсђю№╝Ђ", "сЂхсЂхсЂБ", "сЂЮсѓїсЂфсђюсђюсђюсђю", "сЂѓсѓїсЂЋсђюсђюсђю"},
        Category.ENCOURAGEMENT, new String[]{"сЂєсѓЊсЂєсѓЊ", "сЂЮсЂєсЂЮсЂєсђюсђю", "сѓѕсЂЌсѓѕсЂЌсђюсђюсђю", "сЂјсѓЁсђюсђюсђюсЂБ­ЪцЌ", "сЂѕсѓЅсЂёсЂѕсѓЅсЂёсђюсђю"},
        Category.APOLOGY, new String[]{"сЂћсѓЂсѓЊсЂГсђюсђю", "сЂєсЂєсЂБРђд", "сЂ╗сѓЊсЂесЂФРђд", "сЂЌсѓЄсѓЊсЂ╝сѓіРђд­ЪЦ║"}
    );

    private static final String[] SUFFIX_PATTERNS = {
        "сЂБсЂдсЂ░сЂЋсђюсђюсђю", "сЂфсЂ«сѓѕсђюсђюсђю", "сЂфсѓЊсЂасЂЉсЂЕсЂЅсђюсђюсђю", "сЂасЂБсЂдсЂ░сђюсђюсђюсђю", "сЂасѓѓсѓЊсЂГсђюсђюсђю", "сЂфсЂ«сЂФсЂЃсЂЃсђюсђюсђюсђю"
    };

    private static final String[] MORNING_ADDITIONS = {"Рўђ№ИЈ", "­Ъїъ", "С╗іТЌЦсѓѓСИђуињсЂФсЂїсѓЊсЂ░сѓЇсђюсђю№╝Ђ"};
    private static final String[] NOON_ADDITIONS = {"­ЪЇћ", "РўЋ", "сЂіТў╝СйЋжБЪсЂ╣сЂЪсђюсђю№╝Ъ"};
    private static final String[] NIGHT_ADDITIONS = {"­ЪїЎ", "­ЪїЄ", "тцюсЂ»сЂЋсЂ┐сЂЌсЂёсЂГсЂЄсЂЄсђюсђюсђюсђю"};
    private static final String[] MIDNIGHT_ADDITIONS = {"­ЪїЃ", "уюасѓїсЂфсЂёсЂ«сЂЅсЂЅсђюсђюсђю№╝Ъ", "сЂісЂўсЂЋсѓЊсЂЙсЂаУхисЂЇсЂдсѓІсѓѕсЂЅсЂЅсђюсђюсђюсђю"};
    private static final String[] WEEKEND_ADDITIONS = {"С╗іТЌЦсЂ»жђ▒ТюФсЂасѓѕсђюсђюсђю№╝Ђ", "СИђуињсЂФсЂЙсЂБсЂЪсѓісЂЌсѓѕсђюсђюсђюсђю­ЪњЋ", "жђ▒ТюФсЃєсЃ│сѓисЃДсЃ│РєЉРєЉРєЉРєЉ"};

    private static final String[] EMOJIS = {"­Ъњў", "­ЪњЋ", "­Ъўџ", "­Ъў│", "Рюе", "­ЪЦ║", "­Ъўє", "­Ъўј", "­ЪцЌ"};

    private final Random random = new Random();

    public String convert(String input) {
        Category category = detectCategory(input);
        return convert(input, category);
    }

    public String convert(String input, Category category) {
        StringBuilder sb = new StringBuilder();
        sb.append(getRandom(INTERJECTIONS.getOrDefault(category, new String[]{"сЂГсЂЄсђюсђю"})));
        sb.append("сђЂ").append(input).append("сђЂ").append(getRandom(SUFFIX_PATTERNS));
        sb.append(" ").append(getRandom(ENDINGS.getOrDefault(category, new String[]{"сЂасѓѕсђюсђюсђюсђю"})));

        // ТЎѓжќЊтИ»сЃ╗ТЏюТЌЦсЂФсѓѕсѓІтцЅУф┐
        LocalDateTime now = LocalDateTime.now();
        int hour = now.getHour();
        int day = now.getDayOfWeek().getValue(); // 1 = Тюѕ, 7 = ТЌЦ

        if (day >= 6) { // тюЪТЌЦ
            sb.append(" ").append(getRandom(WEEKEND_ADDITIONS));
        }
        if (hour >= 5 && hour <= 10) {
            sb.append(" ").append(getRandom(MORNING_ADDITIONS));
        } else if (hour >= 11 && hour <= 16) {
            sb.append(" ").append(getRandom(NOON_ADDITIONS));
        } else if (hour >= 17 && hour <= 23) {
            sb.append(" ").append(getRandom(NIGHT_ADDITIONS));
        } else {
            sb.append(" ").append(getRandom(MIDNIGHT_ADDITIONS));
        }

        sb.append(" ").append(getRandom(EMOJIS));
        return sb.toString();
    }

    private Category detectCategory(String input) {
        for (Category category : CATEGORY_KEYWORDS.keySet()) {
            for (String keyword : CATEGORY_KEYWORDS.get(category)) {
                if (input.contains(keyword)) {
                    return category;
                }
            }
        }
        return Category.SMALL_TALK;
    }

    private String getRandom(String[] array) {
        return array[random.nextInt(array.length)];
    }
}
